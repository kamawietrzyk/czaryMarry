@import '../../utils/media.scss';
@import '../../utils/colors.scss';

.CouplesSlider {
    .icon-wrapper {
        width: 4rem;

        & .slick-next {
            z-index: 1;
            right: 5px;
            width: 3rem;
            height: 3rem;
            filter: invert(31%) sepia(0%) saturate(0%) hue-rotate(188deg) brightness(101%) contrast(93%);

            &:hover {
                filter: none;
            }
        }

        & .slick-prev {
            z-index: 1;
            left: 5px;
            width: 3rem;
            height: 3rem;
            filter: invert(31%) sepia(0%) saturate(0%) hue-rotate(188deg) brightness(101%) contrast(93%);

            &:hover {
                filter: none;
            }
        }
    }


    .variable-width {

        .main-con {
            height: 36rem;
        }

        img {
            width: 100%;
            height: 100%;
            object-fit: cover;

            @media (min-width: $laptop) {
                width: 100%;
                height: 100%;
            }
        }

        .slider-box {
            margin-left: .25rem;
            margin-right: .25rem;
        }

        .image {
            width: 100%;
            // height: auto;
            height: 100%;
            position: relative;

            div.overlay {
                background-color: rgb(145, 142, 142);
                height: 100%;
                width: 100%;
                opacity: 0;
                top: 0;
                left: 0;
                position: absolute;
                transition: opacity .1s ease-in;

                &:hover {
                    opacity: .6;
                    cursor: pointer;
                }
            }
        }

        .grid {
            &-even,
            &-twoVertHoriz,
            &-twoVertHorizFlipped {
                display: grid;
                grid-row-gap: .5rem;
            }

            &-twoVertHoriz,
            &-twoVertHorizFlipped {
                grid-gap: .5rem;
                grid-template-columns: repeat(2, 1fr);
                grid-template-rows: 1fr 1fr;

                .pic-ver1 {
                    grid-area: picVer1;
                }

                .pic-ver2 {
                    grid-area: picVer2;
                }

                .pic3 {
                    grid-area: pic3;
                }
            }

            &-twoVertHoriz {
                grid-template-areas:
                "picVer1 picVer2"
                "pic3 pic3";
            }

            &-twoVertHorizFlipped {
                grid-template-areas:
                "pic3 pic3"
                "picVer1 picVer2";
            }
        }

        @media (min-width: $tablet) {
            width: 37rem;
        }

        @media (min-width: $laptop) {
            width: 41rem;
        }
    }
}